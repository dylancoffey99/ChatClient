
package chatwebservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ChatWebService", targetNamespace = "http://chatwebservice/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ChatWebService {


    /**
     * 
     * @param uid
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "newSession", targetNamespace = "http://chatwebservice/", className = "chatwebservice.NewSession")
    @ResponseWrapper(localName = "newSessionResponse", targetNamespace = "http://chatwebservice/", className = "chatwebservice.NewSessionResponse")
    @Action(input = "http://chatwebservice/ChatWebService/newSessionRequest", output = "http://chatwebservice/ChatWebService/newSessionResponse")
    public int newSession(
        @WebParam(name = "uid", targetNamespace = "")
        int uid);

    /**
     * 
     * @param uid
     * @param sid
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "logOut", targetNamespace = "http://chatwebservice/", className = "chatwebservice.LogOut")
    @ResponseWrapper(localName = "logOutResponse", targetNamespace = "http://chatwebservice/", className = "chatwebservice.LogOutResponse")
    @Action(input = "http://chatwebservice/ChatWebService/logOutRequest", output = "http://chatwebservice/ChatWebService/logOutResponse")
    public boolean logOut(
        @WebParam(name = "uid", targetNamespace = "")
        int uid,
        @WebParam(name = "sid", targetNamespace = "")
        int sid);

    /**
     * 
     * @param password
     * @param rptpassword
     * @param name
     * @param username
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registerUser", targetNamespace = "http://chatwebservice/", className = "chatwebservice.RegisterUser")
    @ResponseWrapper(localName = "registerUserResponse", targetNamespace = "http://chatwebservice/", className = "chatwebservice.RegisterUserResponse")
    @Action(input = "http://chatwebservice/ChatWebService/registerUserRequest", output = "http://chatwebservice/ChatWebService/registerUserResponse")
    public int registerUser(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "rptpassword", targetNamespace = "")
        String rptpassword);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkLogin", targetNamespace = "http://chatwebservice/", className = "chatwebservice.CheckLogin")
    @ResponseWrapper(localName = "checkLoginResponse", targetNamespace = "http://chatwebservice/", className = "chatwebservice.CheckLoginResponse")
    @Action(input = "http://chatwebservice/ChatWebService/checkLoginRequest", output = "http://chatwebservice/ChatWebService/checkLoginResponse")
    public int checkLogin(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param uid
     * @param receiver
     * @param mid
     * @param sid
     * @return
     *     returns java.util.List<chatwebservice.Message>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMessages", targetNamespace = "http://chatwebservice/", className = "chatwebservice.GetMessages")
    @ResponseWrapper(localName = "getMessagesResponse", targetNamespace = "http://chatwebservice/", className = "chatwebservice.GetMessagesResponse")
    @Action(input = "http://chatwebservice/ChatWebService/getMessagesRequest", output = "http://chatwebservice/ChatWebService/getMessagesResponse")
    public List<Message> getMessages(
        @WebParam(name = "uid", targetNamespace = "")
        int uid,
        @WebParam(name = "sid", targetNamespace = "")
        int sid,
        @WebParam(name = "receiver", targetNamespace = "")
        String receiver,
        @WebParam(name = "mid", targetNamespace = "")
        int mid);

    /**
     * 
     * @param asc
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUsers", targetNamespace = "http://chatwebservice/", className = "chatwebservice.GetUsers")
    @ResponseWrapper(localName = "getUsersResponse", targetNamespace = "http://chatwebservice/", className = "chatwebservice.GetUsersResponse")
    @Action(input = "http://chatwebservice/ChatWebService/getUsersRequest", output = "http://chatwebservice/ChatWebService/getUsersResponse")
    public List<String> getUsers(
        @WebParam(name = "asc", targetNamespace = "")
        boolean asc);

    /**
     * 
     * @param mid
     * @param sid
     * @return
     *     returns java.util.List<chatwebservice.Message>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMulticast", targetNamespace = "http://chatwebservice/", className = "chatwebservice.GetMulticast")
    @ResponseWrapper(localName = "getMulticastResponse", targetNamespace = "http://chatwebservice/", className = "chatwebservice.GetMulticastResponse")
    @Action(input = "http://chatwebservice/ChatWebService/getMulticastRequest", output = "http://chatwebservice/ChatWebService/getMulticastResponse")
    public List<Message> getMulticast(
        @WebParam(name = "sid", targetNamespace = "")
        int sid,
        @WebParam(name = "mid", targetNamespace = "")
        int mid);

    /**
     * 
     * @param uid
     * @param message
     * @param sid
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "postMulticast", targetNamespace = "http://chatwebservice/", className = "chatwebservice.PostMulticast")
    @ResponseWrapper(localName = "postMulticastResponse", targetNamespace = "http://chatwebservice/", className = "chatwebservice.PostMulticastResponse")
    @Action(input = "http://chatwebservice/ChatWebService/postMulticastRequest", output = "http://chatwebservice/ChatWebService/postMulticastResponse")
    public boolean postMulticast(
        @WebParam(name = "uid", targetNamespace = "")
        int uid,
        @WebParam(name = "sid", targetNamespace = "")
        int sid,
        @WebParam(name = "message", targetNamespace = "")
        String message);

    /**
     * 
     * @param uid
     * @param receiver
     * @param message
     * @param sid
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "postMessage", targetNamespace = "http://chatwebservice/", className = "chatwebservice.PostMessage")
    @ResponseWrapper(localName = "postMessageResponse", targetNamespace = "http://chatwebservice/", className = "chatwebservice.PostMessageResponse")
    @Action(input = "http://chatwebservice/ChatWebService/postMessageRequest", output = "http://chatwebservice/ChatWebService/postMessageResponse")
    public boolean postMessage(
        @WebParam(name = "uid", targetNamespace = "")
        int uid,
        @WebParam(name = "sid", targetNamespace = "")
        int sid,
        @WebParam(name = "receiver", targetNamespace = "")
        String receiver,
        @WebParam(name = "message", targetNamespace = "")
        String message);

}
